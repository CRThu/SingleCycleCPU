$date
	Wed Nov 20 15:50:15 2019
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module top_tb $end
$var wire 8 ! terminal_bus [7:0] $end
$var reg 1 " clk $end
$var reg 1 # reset_n $end
$scope module u_top $end
$var wire 32 $ alu_A [31:0] $end
$var wire 3 % alu_F [2:0] $end
$var wire 1 " clk $end
$var wire 32 & instr [31:0] $end
$var wire 1 ' pc_src $end
$var wire 32 ( ram_addr [31:0] $end
$var wire 1 ) ram_we $end
$var wire 32 * ram_write [31:0] $end
$var wire 1 + reg_we3 $end
$var wire 32 , reg_write3 [31:0] $end
$var wire 1 # reset_n $end
$var wire 11 - rom_addr [10:0] $end
$var wire 8 . terminal_bus [7:0] $end
$var wire 32 / signImm [31:0] $end
$var wire 32 0 rom_dout [31:0] $end
$var wire 32 1 result [31:0] $end
$var wire 32 2 reg_read2 [31:0] $end
$var wire 32 3 reg_read1 [31:0] $end
$var wire 5 4 reg_addr3 [4:0] $end
$var wire 5 5 reg_addr2 [4:0] $end
$var wire 5 6 reg_addr1 [4:0] $end
$var wire 32 7 ram_read [31:0] $end
$var wire 11 8 pc_plus4 [10:0] $end
$var wire 11 9 pc_branch [10:0] $end
$var wire 11 : pc [10:0] $end
$var wire 1 ; cu_reg_write $end
$var wire 1 < cu_reg_dst $end
$var wire 6 = cu_op [5:0] $end
$var wire 1 > cu_mem_write $end
$var wire 1 ? cu_mem_to_reg $end
$var wire 6 @ cu_funct [5:0] $end
$var wire 1 A cu_branch $end
$var wire 1 B cu_alu_src $end
$var wire 3 C cu_alu_control [2:0] $end
$var wire 1 D alu_zero $end
$var wire 32 E alu_result [31:0] $end
$var wire 32 F alu_B [31:0] $end
$var reg 11 G pc_d [10:0] $end
$scope module u_alu $end
$var wire 32 H A [31:0] $end
$var wire 32 I B [31:0] $end
$var wire 3 J F [2:0] $end
$var wire 1 D zero $end
$var reg 32 K Y [31:0] $end
$upscope $end
$scope module u_cu $end
$var wire 6 L funct [5:0] $end
$var wire 6 M op [5:0] $end
$var wire 1 # reset_n $end
$var reg 3 N alu_control [2:0] $end
$var reg 2 O alu_op [1:0] $end
$var reg 1 B alu_src $end
$var reg 1 A branch $end
$var reg 1 ? mem_to_reg $end
$var reg 1 > mem_write $end
$var reg 1 < reg_dst $end
$var reg 1 ; reg_write $end
$upscope $end
$scope module u_ram $end
$var wire 32 P addr [31:0] $end
$var wire 1 " clk $end
$var wire 32 Q data_read [31:0] $end
$var wire 32 R data_write [31:0] $end
$var wire 1 # reset_n $end
$var wire 1 ) we $end
$var integer 32 S i [31:0] $end
$upscope $end
$scope module u_register $end
$var wire 5 T addr1 [4:0] $end
$var wire 5 U addr2 [4:0] $end
$var wire 5 V addr3 [4:0] $end
$var wire 1 " clk $end
$var wire 1 # reset_n $end
$var wire 1 + we3 $end
$var wire 32 W write3 [31:0] $end
$var wire 32 X read2 [31:0] $end
$var wire 32 Y read1 [31:0] $end
$var integer 32 Z i [31:0] $end
$upscope $end
$scope module u_rom $end
$var wire 11 [ addr [10:0] $end
$var wire 32 \ dout [31:0] $end
$upscope $end
$scope module u_terminal $end
$var wire 32 ] addr [31:0] $end
$var wire 1 " clk $end
$var wire 32 ^ data_write [31:0] $end
$var wire 1 # reset_n $end
$var wire 1 ) we $end
$var reg 128 _ terminal_block [127:0] $end
$var reg 8 ` terminal_bus [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx `
bx _
bx ^
bx ]
b100000000000000000000001111011 \
b0 [
bx Z
bx Y
bx X
bx W
b0 V
b0 U
b0 T
bx S
bx R
bx Q
bx P
b0 O
b10 N
b1000 M
b111011 L
bx K
b10 J
b1111011 I
bx H
b0 G
b1111011 F
bx E
xD
b10 C
1B
0A
b111011 @
0?
0>
b1000 =
0<
1;
b100 :
b111110000 9
b100 8
bx 7
b0 6
b0 5
b0 4
bx 3
bx 2
bx 1
b100000000000000000000001111011 0
b1111011 /
bx .
b0 -
bx ,
1+
bx *
0)
bx (
0'
b100000000000000000000001111011 &
b10 %
bx $
1#
0"
bx !
$end
#100
b1 4
b1 V
b111001000 F
b111001000 I
b11100101000 9
b1000 :
b1000 @
b1000 L
b1 5
b1 U
b111001000 /
b1000 8
b100000000000010000000111001000 &
b100000000000010000000111001000 0
b100000000000010000000111001000 \
b100 -
b100 [
b100 G
1"
#200
b0 4
b0 V
b111110000 9
b100 :
b111011 @
b111011 L
b0 5
b0 U
b1111011 /
b100 8
b100000000000000000000001111011 &
b100000000000000000000001111011 0
b100000000000000000000001111011 \
b0 -
b0 [
b0 G
b0 ,
b0 W
b0 1
b0 7
b0 Q
b0 (
b0 P
b0 ]
b0 E
b0 K
1D
b0 F
b0 I
b0 *
b0 R
b0 ^
b0 2
b0 X
b0 $
b0 H
b0 3
b0 Y
0B
0+
0;
b0 _
b0 !
b0 .
b0 `
b11111111 S
b100000 Z
0"
0#
#300
b100000 Z
b11111111 S
1"
#400
b1111011 ,
b1111011 W
b1111011 1
b1111011 (
b1111011 P
b1111011 ]
b1111011 E
b1111011 K
0D
b1111011 F
b1111011 I
1B
1+
1;
0"
1#
#500
bx 7
bx Q
b1001000011 ,
b1001000011 W
b1001000011 1
b1 4
b1 V
b111001000 F
b111001000 I
b1001000011 (
b1001000011 P
b1001000011 ]
b1001000011 E
b1001000011 K
0D
b11100101000 9
b1000 :
b1000 @
b1000 L
b1 5
b1 U
b111001000 /
b1111011 $
b1111011 H
b1111011 3
b1111011 Y
b0 *
b0 R
b0 ^
b0 2
b0 X
b1000 8
b100000000000010000000111001000 &
b100000000000010000000111001000 0
b100000000000010000000111001000 \
b100 -
b100 [
b100 G
1"
#600
0"
#700
b1010 ,
b1010 W
b1010 1
b0 7
b0 Q
b1010 (
b1010 P
b1010 ]
b1010 E
b1010 K
1)
1>
0+
0;
b0 $
b0 H
b0 3
b0 Y
b1010 F
b1010 I
b1001000011 *
b1001000011 R
b1001000011 ^
b1001000011 2
b1001000011 X
b110100 9
b1100 :
b101011 =
b101011 M
b1010 @
b1010 L
b11111 6
b11111 T
b1010 /
b1100 8
b10101111111000010000000000001010 &
b10101111111000010000000000001010 0
b10101111111000010000000000001010 \
b1000 -
b1000 [
b1000 G
1"
#800
0"
#900
b1001000011 ,
b1001000011 W
b1001000011 1
1?
0)
0>
1+
1;
b0 *
b0 R
b0 ^
b0 2
b0 X
b10 4
b10 V
b111000 9
b10000 :
b100011 =
b100011 M
b10 5
b10 U
b10000 8
b10001111111000100000000000001010 &
b10001111111000100000000000001010 0
b10001111111000100000000000001010 \
b1100 -
b1100 [
b1100 G
b1001000011 7
b1001000011 Q
1"
#1000
0"
#1100
b1010111110 ,
b1010111110 W
b1010111110 1
b11 4
b11 V
bx 7
bx Q
b1010111110 (
b1010111110 P
b1010111110 ]
b1010111110 E
b1010111110 K
b10 O
0?
0B
1<
b1111011 $
b1111011 H
b1111011 3
b1111011 Y
b1001000011 F
b1001000011 I
b1001000011 *
b1001000011 R
b1001000011 ^
b1001000011 2
b1001000011 X
b10010100 9
b10100 :
b0 =
b0 M
b100000 @
b100000 L
b0 6
b0 T
b1100000100000 /
b10100 8
b100001100000100000 &
b100001100000100000 0
b100001100000100000 \
b10000 -
b10000 [
b10000 G
1"
#1200
0"
#1300
b1111011 ,
b1111011 W
b1111011 1
b0 7
b0 Q
b1111011 (
b1111011 P
b1111011 ]
b1111011 E
b1111011 K
b110 %
b110 J
b110 C
b110 N
b1010111110 $
b1010111110 H
b1010111110 3
b1010111110 Y
b100 4
b100 V
b10100000 9
b11000 :
b100010 @
b100010 L
b11 6
b11 T
b1 5
b1 U
b10000000100010 /
b11000 8
b11000010010000000100010 &
b11000010010000000100010 0
b11000010010000000100010 \
b10100 -
b10100 [
b10100 G
1"
#1400
0"
#1500
1'
b0 ,
b0 W
b0 1
1D
b0 7
b0 Q
b0 (
b0 P
b0 ]
b0 E
b0 K
b1111011 F
b1111011 I
b1 O
1A
0<
0+
0;
b110 %
b110 J
b110 C
b110 N
b1111011 $
b1111011 H
b1111011 3
b1111011 Y
b1111011 *
b1111011 R
b1111011 ^
b1111011 2
b1111011 X
b0 4
b0 V
b1000100 9
b1000100 :
b100 =
b100 M
b1010 @
b1010 L
b100 6
b100 T
b0 5
b0 U
b1010 /
b11100 8
b10000100000000000000000001010 &
b10000100000000000000000001010 0
b10000100000000000000000001010 \
b11000 -
b11000 [
b11000 G
1"
#1600
0"
#1700
bx %
bx J
bx C
bx N
bx ,
bx W
bx 1
x'
bx 7
bx Q
bx (
bx P
bx ]
bx E
bx K
xD
bx F
bx I
bx :
bx O
x?
x)
x>
xA
xB
x<
x+
x;
bx $
bx H
bx 3
bx Y
bx *
bx R
bx ^
bx 2
bx X
bx 4
bx V
bx 9
bx =
bx M
bx @
bx L
bx 6
bx T
bx 5
bx U
bx /
b1001000 8
bx &
bx 0
bx \
b1000100 -
b1000100 [
b1000100 G
1"
#1800
0"
#1900
bx 8
bx -
bx [
bx G
1"
#2000
0"
#2100
1"
#2200
0"
#2300
1"
#2400
0"
